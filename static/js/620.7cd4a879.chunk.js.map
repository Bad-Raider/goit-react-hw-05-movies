{"version":3,"file":"static/js/620.7cd4a879.chunk.js","mappings":"yNA0CA,UAtCkB,WACd,IACQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,kHAE+BC,EAAAA,EAAAA,IAAgBN,GAF/C,gBAEgBG,EAFhB,EAEgBA,KAEFI,EAAkBJ,EAAKK,KACzB,YACI,MAAO,CAAEC,KAD8B,EAAxCA,KACgBC,UADwB,EAAlCA,UACqBC,aADa,EAAvBA,aACwBX,GADD,EAATA,GAEjC,IAELI,EAAQG,GAThB,gDAWQK,QAAQC,IAAI,KAAIC,SAXxB,0DADY,uBAAC,WAAD,wBAeZC,EAEH,GAAE,CAACf,IAEqB,IAAhBG,EAAKa,QACR,yBAAK,4BACL,wBAEMb,EAAKK,KAAI,gBAAGE,EAAH,EAAGA,UAAWO,EAAd,EAAcA,cAAeN,EAA7B,EAA6BA,aAAcX,EAA3C,EAA2CA,GAA3C,OACL,2BACI,gBAAKkB,MAAO,OAAQC,IAAG,UA7B3B,mCA6B2B,OAAeR,GAAgBS,IAAKH,KAC3D,uBAAIA,KACJ,yBAAG,cAAYP,OAHVV,EADJ,KAQxB,C,sLCxCKqB,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAc,+NAKLC,EAAmB,mCAAG,6GAERX,MAAM,iEAAkEM,GAFhE,cAEzBM,EAFyB,gBAGlBA,EAASC,OAHS,iGAKxBhB,QAAQiB,MAAR,OALwB,yDAAH,qDASnBC,EAAgB,mCAAG,WAAOrB,GAAP,gGAELM,MAAM,mDAAD,OAAoDN,EAApD,8CAAsGY,GAFtG,cAEtBM,EAFsB,gBAGfA,EAASC,OAHM,iGAKrBhB,QAAQiB,MAAR,OALqB,yDAAH,sDAShBE,EAAkB,mCAAG,WAAO/B,GAAP,gGAEPe,MAAM,sCAAD,OAAuCf,EAAvC,mBAA4DqB,GAF1D,cAExBM,EAFwB,gBAGjBA,EAASC,OAHQ,iGAKvBhB,QAAQiB,MAAR,OALuB,yDAAH,sDASlBvB,EAAe,mCAAG,WAAON,GAAP,gGAEJe,MAAM,sCAAD,OAAuCf,EAAvC,2BAAoEqB,GAFrE,cAErBM,EAFqB,gBAGdA,EAASC,OAHK,iGAKpBhB,QAAQiB,MAAR,OALoB,yDAAH,sDASfG,EAAkB,mCAAG,WAAOhC,GAAP,gGAEPe,MAAM,sCAAD,OAAuCf,EAAvC,kCAA2EqB,GAFzE,cAExBM,EAFwB,gBAGjBA,EAASC,OAHQ,iGAKvBhB,QAAQiB,MAAR,OALuB,yDAAH,qD,sBC7C/B,SAASI,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOb,GAEP,YADAO,EAAOP,EAET,CAEIY,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/MovieCast/MovieCast.jsx","helper/API.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchMoviesCast } from \"helper/API\";\n\nconst MovieCast = () => {\n    const baseUrl = 'https://image.tmdb.org/t/p/w500';\n    const { id } = useParams();\n    const [cast, setCast] = useState([]);\n\n    useEffect(() => {\n        async function fetch() {\n            try {\n                const { cast } = await fetchMoviesCast(id);\n\n                const filteredResults = cast.map(\n                    ({ name, character, profile_path, id }) => {\n                        return { name, character, profile_path, id };\n                    }\n                );\n                setCast(filteredResults);\n            } catch (err) {\n                console.log(err.message);\n            }\n        };\n        fetch();\n            \n    }, [id]);\n \n    return  (cast.length === 0)\n        ? <div> No info about actors </div>\n        : <ul>\n            {\n                cast.map(({ character, original_name, profile_path, id }) => (\n                    <li key={id}>\n                        <img width={'40px'} src={`${baseUrl}${profile_path}`} alt={original_name} />\n                        <p>{original_name}</p>\n                        <p>character: {character}</p>\n                    </li>))\n            }\n        </ul>;\n};\n\nexport default MovieCast;","const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: `Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmNzcwYjM3ZGRkNjNlMTZmYzFlMDNlNzM5ZmQyNWEzYSIsInN1YiI6IjY0NmY3ZGE5YzVhZGE1MDBjMWEyZDZiZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ctesgAjc_-Qsx83a0GTn0WKImJ26QG8RrQNVRwOmR7Q` \n  }\n};\n\n\nexport const fetchTraidingMovies = async () => {\n  try {\n    const response = await fetch('https://api.themoviedb.org/3/trending/movie/day?language=en-US', options);\n    return await response.json();\n  } catch (err) {\n    return console.error(err);\n  }\n};\n\nexport const fetchMovieByName = async (name) => {\n  try {\n    const response = await fetch(`https://api.themoviedb.org/3/search/movie?query=${name}&include_adult=false&language=en-US&page=1`, options);\n    return await response.json();\n  } catch (err) {\n    return console.error(err);\n  }\n};\n\nexport const fetchMoviesDetails = async (id) => {\n  try {\n    const response = await fetch(`https://api.themoviedb.org/3/movie/${id}?language=en-US`, options)\n    return await response.json();\n  } catch (err) {\n    return console.error(err);\n  }\n}; \n\nexport const fetchMoviesCast = async (id) => {\n  try {\n    const response = await fetch(`https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`, options)\n    return await response.json();\n  } catch (err) {\n    return console.error(err);\n  }\n};\n\nexport const fetchMoviesReviews = async (id) => {\n  try {\n    const response = await fetch(`https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US&page=1`, options)\n    return await response.json();\n  } catch (err) {\n    return console.error(err);\n  }\n};\n\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["id","useParams","useState","cast","setCast","useEffect","fetchMoviesCast","filteredResults","map","name","character","profile_path","console","log","message","fetch","length","original_name","width","src","alt","options","method","headers","accept","Authorization","fetchTraidingMovies","response","json","error","fetchMovieByName","fetchMoviesDetails","fetchMoviesReviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}