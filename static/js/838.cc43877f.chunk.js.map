{"version":3,"file":"static/js/838.cc43877f.chunk.js","mappings":"8LAoCA,UA/BqB,WAEjB,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAWC,OATDC,EAAAA,EAAAA,YAAU,WACHL,IACCM,EAAAA,EAAAA,IAAmBN,GAClBO,MAAK,SAAAC,GAAI,OAAIJ,EAAWI,EAAKC,QAApB,GAEjB,GAAE,CAACT,IAEJU,QAAQC,IAAIR,GAGiB,IAAnBA,EAAQS,QACH,uBAAG,mBACH,iCACH,wBAAI,cACJ,wBACCT,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASf,EAApB,EAAoBA,GAApB,OACT,2BACI,wBAAKc,KACL,uBAAIC,MAFCf,EADA,QAS5B,C,sLClCKgB,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAc,+NAKLC,EAAmB,mCAAG,6GAERC,MAAM,iEAAkEN,GAFhE,cAEzBO,EAFyB,gBAGlBA,EAASC,OAHS,iGAKxBd,QAAQe,MAAR,OALwB,yDAAH,qDASnBC,EAAgB,mCAAG,WAAOC,GAAP,gGAELL,MAAM,mDAAD,OAAoDK,EAApD,8CAAsGX,GAFtG,cAEtBO,EAFsB,gBAGfA,EAASC,OAHM,iGAKrBd,QAAQe,MAAR,OALqB,yDAAH,sDAShBG,EAAkB,mCAAG,WAAO5B,GAAP,gGAEPsB,MAAM,sCAAD,OAAuCtB,EAAvC,mBAA4DgB,GAF1D,cAExBO,EAFwB,gBAGjBA,EAASC,OAHQ,iGAKvBd,QAAQe,MAAR,OALuB,yDAAH,sDASlBI,EAAe,mCAAG,WAAO7B,GAAP,gGAEJsB,MAAM,sCAAD,OAAuCtB,EAAvC,2BAAoEgB,GAFrE,cAErBO,EAFqB,gBAGdA,EAASC,OAHK,iGAKpBd,QAAQe,MAAR,OALoB,yDAAH,sDASfnB,EAAkB,mCAAG,WAAON,GAAP,gGAEPsB,MAAM,sCAAD,OAAuCtB,EAAvC,kCAA2EgB,GAFzE,cAExBO,EAFwB,gBAGjBA,EAASC,OAHQ,iGAKvBd,QAAQe,MAAR,OALuB,yDAAH,qD,sBC7C/B,SAASK,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOd,GAEP,YADAQ,EAAOR,EAET,CAEIa,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOhC,KAAK2B,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CAEAf,OAAMgB,EACR,GACF,CACF,C","sources":["components/MovieReviews/MovieReviews.jsx","helper/API.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchMoviesReviews } from \"helper/API\"; \n\n\nconst MovieReviews = () => {\n\n    const { id } = useParams();\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        if(id){\n            fetchMoviesReviews(id)\n            .then(data => setReviews(data.results))\n        }\n    }, [id]);\n\n    console.log(reviews);\n\n     return (\n             (reviews.length === 0)\n                 ? <p>We don`t have</p> \n                 : <>\n                <h1>Reviews:</h1>\n                <ul>\n                {reviews.map(({ author, content, id }) => (\n                    <li key={id}>\n                        <h2>{author}</h2>\n                        <p>{content}</p>\n                    </li>\n                ))}\n                     </ul>\n                </>  \n    );\n};\n\nexport default MovieReviews;","const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: `Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmNzcwYjM3ZGRkNjNlMTZmYzFlMDNlNzM5ZmQyNWEzYSIsInN1YiI6IjY0NmY3ZGE5YzVhZGE1MDBjMWEyZDZiZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ctesgAjc_-Qsx83a0GTn0WKImJ26QG8RrQNVRwOmR7Q` \n  }\n};\n\n\nexport const fetchTraidingMovies = async () => {\n  try {\n    const response = await fetch('https://api.themoviedb.org/3/trending/movie/day?language=en-US', options);\n    return await response.json();\n  } catch (err) {\n    return console.error(err);\n  }\n};\n\nexport const fetchMovieByName = async (name) => {\n  try {\n    const response = await fetch(`https://api.themoviedb.org/3/search/movie?query=${name}&include_adult=false&language=en-US&page=1`, options);\n    return await response.json();\n  } catch (err) {\n    return console.error(err);\n  }\n};\n\nexport const fetchMoviesDetails = async (id) => {\n  try {\n    const response = await fetch(`https://api.themoviedb.org/3/movie/${id}?language=en-US`, options)\n    return await response.json();\n  } catch (err) {\n    return console.error(err);\n  }\n}; \n\nexport const fetchMoviesCast = async (id) => {\n  try {\n    const response = await fetch(`https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`, options)\n    return await response.json();\n  } catch (err) {\n    return console.error(err);\n  }\n};\n\nexport const fetchMoviesReviews = async (id) => {\n  try {\n    const response = await fetch(`https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US&page=1`, options)\n    return await response.json();\n  } catch (err) {\n    return console.error(err);\n  }\n};\n\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["id","useParams","useState","reviews","setReviews","useEffect","fetchMoviesReviews","then","data","results","console","log","length","map","author","content","options","method","headers","accept","Authorization","fetchTraidingMovies","fetch","response","json","error","fetchMovieByName","name","fetchMoviesDetails","fetchMoviesCast","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}